<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>vim on 1ミリもわからん</title><link>https://raahii.github.io/tags/vim/</link><description>Recent content in vim on 1ミリもわからん</description><generator>Hugo -- gohugo.io</generator><language>ja-JP</language><lastBuildDate>Fri, 30 Sep 2016 02:02:00 +0900</lastBuildDate><atom:link href="https://raahii.github.io/tags/vim/index.xml" rel="self" type="application/rss+xml"/><item><title>最近の開発環境におけるTips</title><link>https://raahii.github.io/2016/09/30/020223/</link><pubDate>Fri, 30 Sep 2016 02:02:00 +0900</pubDate><guid>https://raahii.github.io/2016/09/30/020223/</guid><description>近況
夏休みが今週いっぱいで終わる 今週rubyとrailsに入門した 開発環境 ruby、railsは現在チュートリアルをやってるような感じで特に書くことはないのだけれど、それらを始めてから急に同時に多くのファイルを編集する機会が多くなってきました。なので、最近気づいたコードを書くときのコツ、vimのいい感じの使い方を少しメモしておきます。
① NERDTreeと画面分割を使う プロジェクトのルートでNerdTreeを開きながら水平分割(s)を使うといろんなファイルをすぐ開けて便利です。加えてNERDTreeはファイルの作成/削除などの基本操作もできるのでvimの中で結構完結します。
② タブページ機能を使ってファイルをうまく仕分ける Model、View、Controller、設定ファイルといったコードのかたまりをタブを利用して分けてあげると使いやすい。もちろんタブ間の移動は使いやすいキーにバインドしておく必要があります。ファイルを新しいタブで開くときもNERDTreeはtでできるので楽ちんです。
③ 作業の中断・開始にはセッションを使う これまで書いたようにファイルは整理しながらたくさん開くので、必然的にその状況を保存したいなぁとなります。以下の記事にわかりやすく書いてあるのですが、vimでは:mksで現在開いているバッファやウィンドウの状態を保存してくれます。記事では~/.Session.vimに保存されると書いてあるのですが、私の環境では標準でカレントディレクトリ（./Session.vim）に作成されました。この方がわかりやすいので私は好きです。 keyamb.hatenablog.com
④ エディタとシェルはもう分けちゃったほうがよい vimを開いている状態からrailsやgitのコマンドを打つためにシェルに戻るのは結構めんどくさいです。今までは:shellと打って抜けるやり方が好きでしたが、最近vimを抜けてからzshが入力を受け付けるまでが結構遅いことに気づき、iTermのウィンドウをそもそも分けることにしました。zshがちょっと重いらしく、あんまり使いこなせてもいないのでbashにしようかなと思ってます。あと、VimShellとかfugitiveはあんまり合いませんでした。
所感 やっぱり大きめのモニタあると捗る エディタとシェルを分けちゃうとvimの存在意義が薄れてきている気が vimは操作といい色々柔軟できるけどそろそろIDEも試してみようかな…</description></item></channel></rss>